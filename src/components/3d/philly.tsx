'use client'

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/3d/philly.glb --transform
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GroupProps, useFrame } from '@react-three/fiber'
import {
  BufferGeometry,
  Material,
  NormalBufferAttributes,
  Vector3,
} from 'three'

import { WobblyWireMaterial } from '../../lib/shaders/wobbly-wire'

export function PhillyModel(props: GroupProps) {
  const materialRef = useRef<Material>(
    new WobblyWireMaterial({
      wireframe: true,
      uniforms: {
        cameraPos: { value: new Vector3(0, 0, 0) },
        color: { value: new Vector3(1, 1, 1) },
        time: { value: 0 },
      },
    })
  )
  const { nodes } = useGLTF('/3d/philly.glb') as unknown as {
    nodes: {
      SmallerJoined: { geometry: BufferGeometry<NormalBufferAttributes> }
    }
  }
  useFrame((_, delta) => {
    ;(materialRef.current as Material & { time: number }).time += delta
  })
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.SmallerJoined.geometry}
        material={materialRef.current}
        position={[0, 0, 0]}
        rotation={[0, 0, 0]}
        scale={1}
      />
    </group>
  )
}

useGLTF.preload('/philly.glb')
